name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[testing,linting]

    - name: Lint with ruff
      run: |
        ruff check .

    - name: Format check with black
      run: |
        black --check .

    - name: Type check with mypy
      run: |
        mypy garminconnect --ignore-missing-imports

    - name: Test with pytest
      env:
        GARMINTOKENS: ${{ secrets.GARMINTOKENS }}
      run: |
        pytest tests/ -v --tb=short

    - name: Upload coverage reports
      if: matrix.python-version == '3.11'
      run: |
        pip install coverage[toml]
        coverage run -m pytest
        coverage xml
      continue-on-error: true

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit[toml] safety

    - name: Security check with bandit
      run: |
        bandit -r garminconnect -f json -o bandit-report.json || true

    - name: Safety check
      run: |
        safety check --json --output safety-report.json || true
      continue-on-error: true
